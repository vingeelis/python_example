# loggers definition
# the section [logger] follows are invoked by logging.getLogger(name) for name in it's keys or root, the name is equals to qualname
[logger]
keys=root, console, terminate_transback

# root is super class, mandatory options
[logger_root]
level=CRITICAL
handlers=consoleHandler
qualname=root

[logger_console]
level=DEBUG
handlers=consoleHandler
qualname=console

[logger_terminate_transback]
level=INFO
handlers=fileHandler
qualname=terminate_transback


# handlers definition
[handlers]
keys=consoleHandler, errorHandler, fileHandler

[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=simpleFormat
args=(sys.stdout,)
propagate=0

[handler_errorHandler]
class=StreamHandler
level=ERROR
formatter=detailFormat
args=(sys.stderr,)
propagate=1

[handler_fileHandler]
class=FileHandler
level=INFO
formatter=detailFormat
# the arg: logfilename can be passed in by logging.fileConfig(loginipath, defaults={'logfilename': '/var/log/mylog.log'})
args=('%(logfilename)s',)
propagate=0


# formatters definition
[formatters]
keys=simpleFormat, detailFormat

[formatter_simpleFormat]
format=%(asctime)s - %(levelname)s - %(name)s - %(message)s
datefmt=%Y%m%d %H:%M:%S

[formatter_detailFormat]
format=%(asctime)s - %(levelname)s - %(name)s - %(module)s.%(funcName)s - %(message)s
datefmt=%Y%m%d %H:%M:%S

